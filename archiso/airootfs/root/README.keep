name: Build Starfleet OS ISOs

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
    paths-ignore:
      - "README.md"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: iso-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build (${{ matrix.role }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        role: [ server, control, drone ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache pacman packages
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/pacman-cache
          key: pacman-${{ runner.os }}-${{ hashFiles('archiso/**', 'roles/**', 'scripts/**', 'system/**') }}
          restore-keys: |
            pacman-${{ runner.os }}-

      - name: Build inside Arch container
        uses: addnab/docker-run-action@v3
        with:
          image: archlinux:latest
          options: >-
            --privileged
            -v ${{ github.workspace }}:/repo
            -v ${{ runner.temp }}/pacman-cache:/var/cache/pacman/pkg
            -v /dev:/dev
            --tmpfs /run
            --tmpfs /tmp
            -w /repo
          run: |
            set -euxo pipefail
            pacman -Syu --noconfirm archlinux-keyring
            pacman -S  --noconfirm base-devel archiso squashfs-tools dosfstools rsync git coreutils util-linux

            # Prepare role-specific profile
            export STARFLEET_ROLE="${{ matrix.role }}"
            ./scripts/merge_role.sh "$STARFLEET_ROLE"

            # Ensure roles are available inside the ISO under /root/roles
            mkdir -p archiso/airootfs/root/roles
            rsync -a roles/ archiso/airootfs/root/roles/

            # Build
            mkdir -p work out
            export GITHUB_REF_NAME="${GITHUB_REF_NAME:-${GITHUB_REF_NAME}}"
            mkarchiso -v -w work -o out ./archiso

            ls -lah out

      - name: Create checksums
        shell: bash
        run: |
          shopt -s globstar nullglob
          for f in out/**/*.iso out/*.iso; do
            sha256sum "$f" > "$f.sha256"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "starfleet-os-${{ matrix.role }}-${{ github.run_number }}"
          path: |
            out/*.iso
            out/*.iso.sha256
            out/**/*.iso
            out/**/*.iso.sha256
          if-no-files-found: error

  release:
    name: Release ISOs on tag
    needs: [ build ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/*.iso
            dist/**/*.iso.sha256
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
